package 每日一题.寻找第K大;

class Finder {
    public int FindMid(int[] a,int left,int right,int K){
    int mid = a[right];
    while(left<right){
        while(a[left] > mid && left < right)
            left++;
        if(left>=right)
            break;
        a[right] = a[left];
        while (a[right] <= mid && left < right)
            right--;
        if(left>=right)
            break;
        a[left] = a[right];
    }
    a[left] = mid;
    return left;
}
    public int findKth(int[] a, int n, int K) {
        int left = 0;
        int right = n-1;
        int left1 = 0;
        int right1 = n-1;
        while(true) {
            int mid = FindMid(a, left1, right1, K);
            if (K > mid+1) {
                left1 = mid+1;
                right1 = right;
                left = mid+1;
            } else if (K < mid+1) {
                left1 = left;
                right1 = mid-1;
                right = mid-1;
            } else {
                return a[mid];
            }
        }
    }

}

public class Test {
    public static void main(String[] args) {
        int[] array = new int[]{3,2,3,1,2,4,5,5,6};
        System.out.println(new Finder().findKth(array,9,4));
    }
}
